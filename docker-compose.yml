services:
  db:
    image: pgvector/pgvector:pg16
    container_name: proposal_db
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - backend/.env
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: proposal_redis
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  web:
    build: ./backend   # ðŸ‘ˆ safer than "."
    container_name: proposal_web
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - ./backend:/app   # map backend dir only
    ports:
      - "8000:8000"
    env_file:
      - backend/.env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy

  worker:
    build: ./backend
    container_name: proposal_worker
    command: celery -A core worker -l info
    volumes:
      - ./backend:/app
    env_file:
      - backend/.env
    depends_on:
      web:
        condition: service_started
      redis:
        condition: service_healthy

volumes:
  postgres_data:
